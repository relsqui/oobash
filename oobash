#!/bin/bash

declare -A oob_objects
declare -A oob_parents
declare -A oob_properties
let oob_next_id=1

throw() {
    echo "!! $@" 1>&2
    exit 1
}

debug() {
    if [ -n "$DEBUG" ]; then
        echo "-- $@" 1>&2
    fi
}

object() {
    local this_object=${FUNCNAME[0]}
    if [ -z "$self" ]; then local self="$this_object"; fi
    local command="$1"
    shift

    if [ "$command" == "def" ]; then
        local method_name="$1"
        if [ -z "$method_name" ]; then throw "'def' requires a method name"; fi
        local method_definition
        read -r -d '' method_definition
        local full_name="oob_properties[${this_object}_${method_name}]"
        source <(echo -e "$full_name () {\n$method_definition\n}")

    elif [ "${command:0:1}" == '.' ]; then
        local property="oob_properties[${this_object}_${command:1}]"
        if [ "$1" == "=" ]; then
            shift
            eval "${property}=\"$@\""
        else
            local value="${!property}"
            local type=$(type -t "$property")
            if [ -n "$value" ]; then
                echo "$value"
            elif [ "$type" == "function" ]; then
                debug "calling function $property for $self"
                self=$self "$property" $@
            elif [ -n "${oob_parents[$this_object]}" ]; then
                debug "$this_object doesn't have $property for $self, going to parent"
                self=$self "${oob_parents[$this_object]}" $command $@
            else
                throw "Property not found: $command"
            fi
        fi
    fi
}

new() {
    local class=$1
    local class_definition=$(declare -f ${!class})
    if [ -z "$class_definition" ]; then
        throw "Can't instantiate '$class'"
    fi
    local id=$oob_next_id
    oob_next_id=( $oob_next_id + 1 )
    local instance_var="oob_objects[$id]"
    local object_definition=$(declare -f object)
    source <(echo "${instance_var}${object_definition#object}")
    oob_parents[$id]="$class"
    echo $instance_var
}

class=$(new object)
debug $class
declare -f $class
debug $oob_next_id
